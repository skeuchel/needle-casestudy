namespace tm, x, y, z : Tm
  - shift: "shift"
  - subst: "subst"

sort Ty, S, T, U :=
  | tunit
  | tarr T1 T2

sort Tm, s, t, u :=
  + var {x}
  | tt
  | abs x T [x]t
  | app t1 t2

env Env, G, D :=
  + empty
  | evar : x -> T ; Typing

relation [Env] Typing t T :=
  + T_Var  : {x -> T} -> Typing {var x} T
  | T_Unit : Typing (tt) (tunit)
  | T_Abs  : [x -> T1] Typing t (weaken T2 x) ->
             Typing (abs x T1 t) (tarr T1 T2)
  | T_App  : Typing t1 (tarr T11 T12) -> Typing t2 T11 ->
             Typing (app t1 t2) T12
